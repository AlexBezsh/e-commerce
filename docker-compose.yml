version: '3.8'

services:
  mongo-1:
    image: mongo:7.0.3
    container_name: mongo-1
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: ${DB_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./mongo-replication.key:/etc/mongo-replication.key
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    command: --replSet rs0 --keyFile /etc/mongo-replication.key
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:1,host:'mongo-1:27017',priority:1},{_id:2,host:'mongo-2:27017',priority:0},{_id:3,host:'mongo-3:27017',priority:0}]}) }" | mongosh -u $$MONGO_INITDB_ROOT_USERNAME -p $$MONGO_INITDB_ROOT_PASSWORD --quiet
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      mongo-2:
        condition: service_healthy
      mongo-3:
        condition: service_healthy

  mongo-2:
    image: mongo:7.0.3
    container_name: mongo-2
    restart: always
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./mongo-replication.key:/etc/mongo-replication.key
    command: --replSet rs0 --keyFile /etc/mongo-replication.key
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh -u $$MONGO_INITDB_ROOT_USERNAME -p $$MONGO_INITDB_ROOT_PASSWORD --quiet | grep 1
      interval: 5s
      timeout: 5s
      retries: 10

  mongo-3:
    image: mongo:7.0.3
    container_name: mongo-3
    restart: always
    ports:
      - "27019:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./mongo-replication.key:/etc/mongo-replication.key
    command: --replSet rs0 --keyFile /etc/mongo-replication.key
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh -u $$MONGO_INITDB_ROOT_USERNAME -p $$MONGO_INITDB_ROOT_PASSWORD --quiet | grep 1
      interval: 5s
      timeout: 5s
      retries: 10

  mongo-ui:
    image: mongo-express:1.0.0
    container_name: mongo-ui
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ""
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${DB_USER}:${DB_PASSWORD}@mongo-1:27017,mongo-2:27018,mongo-3:27019/?replicaSet=rs0
    depends_on:
      mongo-1:
        condition: service_healthy

  keycloak-db:
    image: mysql:8.1.0
    container_name: keycloak-db
    ports:
      - "3307:3307"
    environment:
      MYSQL_TCP_PORT: 3307
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: keycloak
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:22.0.5
    restart: always
    ports:
      - "8082:8082"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://keycloak-db:3307/keycloak
      KC_HOSTNAME: keycloak
      KC_DB_USERNAME: ${DB_USER}
      KC_DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./e-commerce-realm.json:/opt/keycloak/data/import/e-commerce-realm.json
    command:
      - "start-dev --import-realm --http-port=8082"
    depends_on:
      - keycloak-db

  backend:
    container_name: backend
    build: ./
    restart: always
    ports:
      - "8080:8080"
    environment:
      DB_URL: mongodb://${DB_USER}:${DB_PASSWORD}@mongo-1:27017,mongo-2:27018,mongo-3:27019/?replicaSet=rs0
      DB_NAME: ${DB_NAME}
      KEYCLOAK_URL: http://keycloak:8082
      PAYPAL_CLIENT_ID: ${PAYPAL_CLIENT_ID}
      PAYPAL_CLIENT_SECRET: ${PAYPAL_CLIENT_SECRET}
    depends_on:
      keycloak:
        condition: service_started
      mongo-1:
        condition: service_healthy

  ui:
    container_name: ui
    build: ./frontend/
    restart: always
    ports:
      - "3000:3000"